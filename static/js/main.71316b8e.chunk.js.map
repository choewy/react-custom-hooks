{"version":3,"sources":["hooks.js","Examples.js","App.js","index.js"],"names":["useFadeIn","duration","delay","element","useRef","useEffect","current","style","transition","opacity","ref","AppUseInput","inputProps","init","validator","useState","value","setValue","onChange","event","target","useInput","length","padding","AppUseTabs","api","tab","content","tabs","index","currentIndex","setCurrentIndex","Array","isArray","onContent","useTabs","map","onClick","AppUseLoading","callback","text","setText","useLoading","setTimeout","AppUseClick","count","setCount","addEventListener","useClick","AppUseConfirm","answer","setAnswer","onConfirm","message","resolve","reject","window","confirm","useConfirm","AppUsePreventLeave","listner","preventDefault","returnValue","enablePrevent","disablePrevent","removeEventListener","usePreventLeave","AppUseBeforeLeave","handle","clientY","document","useBeforeLeave","alert","AppUseFadeIn","element1","element2","AppUseNetwork","network","navigator","onLine","status","setStatus","handleChange","useNetwork","AppUseScroll","y","x","state","setState","onScroll","scrollX","scrollY","useScroll","height","AppUseFullscreen","isFull","setIsFull","onFullscreen","requestFullscreen","exitFullscreen","useFullscreen","alt","src","AppUseNotification","triggerNotification","title","options","Notification","permission","requestPermission","then","useNotification","body","AppUseAxios","axiosInstance","defaultAxios","loading","error","data","trigger","setTrigger","refetch","Date","now","url","console","log","catch","useAxios","links","path","Routes","exact","component","App","example","to","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.71316b8e.chunk.js","sourcesContent":["import { useEffect, useState, useRef } from 'react';\r\nimport defaultAxios from 'axios';\r\n\r\nexport const useInput = (init, validator) => {\r\n    const [value, setValue] = useState(init);\r\n    const onChange = event => {\r\n        const { target: { value } } = event;\r\n        if (\r\n            typeof validator === \"function\" &&\r\n            validator(value)\r\n        ) setValue(value);\r\n    };\r\n\r\n    return { value, onChange };\r\n};\r\n\r\nexport const useTabs = (index, tabs) => {\r\n    const [currentIndex, setCurrentIndex] = useState(index);\r\n    if (!tabs || !Array.isArray(tabs)) {\r\n        return;\r\n    } else {\r\n        return {\r\n            content: tabs[currentIndex].content,\r\n            onContent: setCurrentIndex\r\n        };\r\n    };\r\n};\r\n\r\nexport const useLoading = (init, callback) => {\r\n    const [text, setText] = useState(init);\r\n\r\n    useEffect(() => {\r\n        if (typeof callback === \"function\") {\r\n            callback();\r\n        }\r\n    }, [text, callback]);\r\n\r\n    return { text, setText };\r\n}\r\n\r\nexport const useClick = (onClick) => {\r\n    const element = useRef();\r\n\r\n    useEffect(() => {\r\n        if (element.current) {\r\n            element.current.addEventListener(\"click\", onClick);\r\n        };\r\n    });\r\n\r\n    return element;\r\n};\r\n\r\nexport const useConfirm = (message, resolve, reject) => {\r\n    if (!resolve || typeof resolve !== \"function\") return;\r\n    if (reject && typeof reject !== \"function\") return;\r\n\r\n    const confirmAction = () => {\r\n        if (window.confirm(message)) resolve();\r\n        else reject();\r\n    };\r\n\r\n    return confirmAction;\r\n};\r\n\r\nexport const usePreventLeave = () => {\r\n    const listner = event => {\r\n        event.preventDefault();\r\n        event.returnValue = '';\r\n    };\r\n\r\n    const enablePrevent = () => window.addEventListener('beforeunload', listner);\r\n    const disablePrevent = () => window.removeEventListener('beforeunload', listner);\r\n\r\n    return { enablePrevent, disablePrevent };\r\n};\r\n\r\nexport const useBeforeLeave = (callback) => {\r\n\r\n    const handle = (event) => {\r\n        if (typeof callback === \"function\" && event.clientY <= 0) callback();\r\n    };\r\n\r\n    useEffect(() => {\r\n        document.addEventListener(\"mouseleave\", handle);\r\n        return () => document.removeEventListener(\"mouseleave\", handle);\r\n    });\r\n};\r\n\r\nexport const useFadeIn = (duration = 2, delay = 0) => {\r\n    const element = useRef();\r\n\r\n    useEffect(() => {\r\n        if (element.current) {\r\n            const { current } = element;\r\n            current.style.transition = `opacity ${duration}s ease-in-out ${delay}s`;\r\n            current.style.opacity = 1;\r\n        }\r\n    });\r\n\r\n    return { ref: element, style: { opacity: 0 } };\r\n};\r\n\r\nexport const useNetwork = onChange => {\r\n    const [status, setStatus] = useState(navigator.onLine);\r\n\r\n    const handleChange = () => {\r\n        if (typeof onChange === \"function\") {\r\n            onChange();\r\n        }\r\n        setStatus(navigator.onLine);\r\n    }\r\n\r\n    useEffect(() => {\r\n        window.addEventListener(\"online\", handleChange);\r\n        window.addEventListener(\"offline\", handleChange);\r\n\r\n        return () => {\r\n            window.removeEventListener(\"online\", handleChange);\r\n            window.removeEventListener(\"offline\", handleChange);\r\n        };\r\n\r\n    });\r\n\r\n    return status;\r\n};\r\n\r\nexport const useScroll = () => {\r\n    const [state, setState] = useState({ x: 0, y: 0 });\r\n\r\n    const onScroll = () => {\r\n        const x = window.scrollX;\r\n        const y = window.scrollY;\r\n        setState({ x, y });\r\n    };\r\n\r\n    useEffect(() => {\r\n        window.addEventListener(\"scroll\", onScroll);\r\n        return () => window.removeEventListener(\"scroll\", onScroll);\r\n    });\r\n\r\n    return state;\r\n};\r\n\r\nexport const useFullscreen = (callback) => {\r\n    const element = useRef();\r\n\r\n    const onFullscreen = () => {\r\n        if (element.current) {\r\n            element.current.requestFullscreen();\r\n            if (callback && typeof callback === \"function\") {\r\n                callback(true)\r\n            };\r\n        };\r\n    };\r\n\r\n    const exitFullscreen = () => {\r\n        document.exitFullscreen();\r\n        if (callback && typeof callback === \"function\") {\r\n            callback(false);\r\n        };\r\n    };\r\n\r\n    return { element, onFullscreen, exitFullscreen };\r\n};\r\n\r\nexport const useNotification = (title, options) => {\r\n    if (!(\"Notification\" in window)) { return; };\r\n\r\n    const chromeNotification = () => {\r\n        if (Notification.permission !== \"granted\") {\r\n            Notification.requestPermission()\r\n                .then(permission => {\r\n                    if (permission === \"granted\") {\r\n                        new Notification(title, options);\r\n                    } else {\r\n                        return;\r\n                    };\r\n                });\r\n        } else {\r\n            new Notification(title, options);\r\n        };\r\n    };\r\n\r\n    return chromeNotification;\r\n};\r\n\r\nexport const useAxios = (options, axiosInstance = defaultAxios) => {\r\n    const [state, setState] = useState({\r\n        loading: true,\r\n        error: null,\r\n        data: null\r\n    });\r\n\r\n    const [trigger, setTrigger] = useState(0);\r\n\r\n    const refetch = () => {\r\n        setState({\r\n            ...state,\r\n            loading: true,\r\n        });\r\n        setTrigger(Date.now());\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (!options.url) {\r\n            return;\r\n        };\r\n\r\n        axiosInstance(options)\r\n            .then(data => {\r\n                console.log(data);\r\n                setState({\r\n                    ...state,\r\n                    loading: false,\r\n                    data\r\n                })\r\n            })\r\n            .catch(error => {\r\n                setState({\r\n                    ...state,\r\n                    loading: false,\r\n                    error\r\n                })\r\n            })\r\n    }, [trigger]);\r\n\r\n    return { ...state, refetch };\r\n}","import React, { useState } from \"react\";\r\nimport { Route, Switch } from \"react-router\";\r\nimport { useAxios, useBeforeLeave, useClick, useConfirm, useFadeIn, useFullscreen, useInput, useLoading, useNetwork, useNotification, usePreventLeave, useScroll, useTabs } from \"./hooks\";\r\n\r\nconst AppUseInput = () => {\r\n\r\n    const inputValidator = (value) => value.length <= 10;\r\n    const inputProps = useInput('', inputValidator);\r\n\r\n    return (\r\n        <div style={{ padding: \"10px\" }}>\r\n            <h1>💡 useInput</h1>\r\n            <h2>코드</h2>\r\n            <pre>{`import { useState } from 'react';\r\n\r\nexport const useInput = (init, validator) => {\r\n    const [value, setValue] = useState(init);\r\n\r\n    const onChange = event => {\r\n        const { target: { value } } = event;\r\n        if (\r\n            typeof validator === \"function\" &&\r\n            validator(value)\r\n        ) setValue(value);\r\n    };\r\n\r\n    return { value, onChange };\r\n};`}</pre>\r\n            <hr />\r\n            <h2>예시</h2>\r\n            <input {...inputProps} />\r\n            <p>10글자 이내로 제한</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst AppUseTabs = () => {\r\n    const api = [\r\n        {\r\n            tab: \"탭 1\",\r\n            content: \"첫번째 탭\"\r\n        },\r\n        {\r\n            tab: \"탭 2\",\r\n            content: \"두번째 탭\"\r\n        },\r\n        {\r\n            tab: \"탭 3\",\r\n            content: \"세번째 탭\"\r\n        }\r\n    ];\r\n    const tabs = useTabs(0, api);\r\n\r\n    return (\r\n        <div style={{ padding: \"10px\" }}>\r\n            <h1>💡 useTabs</h1>\r\n            <h2>코드</h2>\r\n            <pre>{`import { useState } from 'react';\r\n\r\nexport const useTabs = (index, tabs) => {\r\n    const [currentIndex, setCurrentIndex] = useState(index);\r\n\r\n    if (!tabs || !Array.isArray(tabs)) {\r\n        return;\r\n    } else {\r\n        return {\r\n            content: tabs[currentIndex].content,\r\n            onContent: setCurrentIndex\r\n        };\r\n    }\r\n};`}</pre>\r\n            <hr />\r\n            <h2>예시</h2>\r\n            {api.map((tab, index) =>\r\n                <button key={index} onClick={() => tabs.onContent(index)}>{tab.tab}</button>\r\n            )}\r\n            <p>{tabs.content}</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst AppUseLoading = () => {\r\n\r\n    const { text, setText } = useLoading('5초 간 대기...');\r\n\r\n    setTimeout(() => {\r\n        setText('짜잔!');\r\n    }, 5000)\r\n\r\n    return (\r\n        <div style={{ padding: \"10px\" }}>\r\n            <h1>💡 useLoading</h1>\r\n            <h2>코드</h2>\r\n            <pre>{`import { useState } from 'react';\r\n\r\nexport const useLoading = (init, callback) => {\r\n    const [text, setText] = useState(init);\r\n\r\n    useEffect(() => {\r\n        if (typeof callback === \"function\") {\r\n            callback();\r\n        }\r\n    }, [text, callback]);\r\n\r\n    return { text, setText };\r\n}`}</pre>\r\n            <hr />\r\n            <h2>예시</h2>\r\n            <p>{text}</p>\r\n        </div>\r\n\r\n    )\r\n};\r\n\r\nconst AppUseClick = () => {\r\n\r\n    const [count, setCount] = useState(0);\r\n    const onClick = () => {\r\n        setCount(count + 1);\r\n    }\r\n\r\n    const element = useClick(onClick);\r\n\r\n    return (\r\n        <div style={{ padding: \"10px\" }}>\r\n            <h1>💡 useClick</h1>\r\n            <h2>코드</h2>\r\n            <pre>{`import { useRef } from 'react';\r\n\r\nexport const useClick = (onClick) => {\r\n    const element = useRef();\r\n\r\n    useEffect(() => {\r\n        if (element.current) {\r\n            element.current.addEventListener(\"click\", onClick);\r\n        }\r\n    });\r\n\r\n    return element;\r\n};`}</pre>\r\n            <hr />\r\n            <h2>예시</h2>\r\n            <button ref={element}>클릭</button>\r\n            <p>클릭 횟수 : {count}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst AppUseConfirm = () => {\r\n    const [answer, setAnswer] = useState(\"\");\r\n    const agree = () => setAnswer(\"현명하시군요!\")\r\n    const abort = () => setAnswer(\"다시 생각해보세요.\");\r\n    const onConfirm = useConfirm(\"훅이 마음에 드시나요?\", agree, abort);\r\n\r\n    return (\r\n        <div style={{ padding: \"10px\" }}>\r\n            <h1>💡 useConfirm</h1>\r\n            <h2>코드</h2>\r\n            <pre>{`export const useConfirm = (message, resolve, reject) => {\r\n    if (!resolve || typeof resolve !== \"function\") return;\r\n    if (reject && typeof reject !== \"function\") return;\r\n\r\n    const confirmAction = () => {\r\n        if (window.confirm(message)) resolve();\r\n        else reject();\r\n    }\r\n\r\n    return confirmAction;\r\n};`}</pre>\r\n            <hr />\r\n            <h2>예시</h2>\r\n            <button onClick={onConfirm}>confirm</button>\r\n            <p>결과 : {answer}</p>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst AppUsePreventLeave = () => {\r\n    const { enablePrevent, disablePrevent } = usePreventLeave();\r\n\r\n    return (\r\n        <div style={{ padding: \"10px\" }}>\r\n            <h1>💡 usePreventLeave</h1>\r\n            <h2>코드</h2>\r\n            <pre>{`export const usePreventLeave = () => {\r\n    const listner = event => {\r\n        event.preventDefault();\r\n        event.returnValue = '';\r\n    };\r\n\r\n    const enablePrevent = () => window.addEventListener('beforeunload', listner);\r\n    const disablePrevent = () => window.removeEventListener('beforeunload', listner);\r\n\r\n    return { enablePrevent, disablePrevent };\r\n}`}</pre>\r\n            <hr />\r\n            <h2>예시</h2>\r\n            <button onClick={enablePrevent}>활성화</button>\r\n            <button onClick={disablePrevent}>비활성화</button>\r\n            <p>활성화를 클릭하고 페이지를 닫아보세요.</p>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst AppUseBeforeLeave = () => {\r\n    const callback = () => alert(\"뻥이에요!\");\r\n    useBeforeLeave(callback);\r\n\r\n    return (\r\n        <div style={{ padding: \"10px\" }}>\r\n            <h1>💡 useBeforeLeave</h1>\r\n            <h2>코드</h2>\r\n            <pre>{`import { useEffect } from 'react';\r\n            \r\nexport const useBeforeLeave = (callback) => {\r\n    const handle = (event) => {\r\n        if (typeof callback === \"function\" && event.clientY <= 0) callback();\r\n    }\r\n\r\n    useEffect(() => {\r\n        document.addEventListener(\"mouseleave\", handle);\r\n        return () => document.removeEventListener(\"mouseleave\", handle);\r\n    })\r\n}`}</pre>\r\n            <hr />\r\n            <h2>예시</h2>\r\n            <p>PC에서 주소창에 google.com을 입력하면 비트코인 1개를 줍니다!</p>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst AppUseFadeIn = () => {\r\n\r\n    const element1 = useFadeIn();\r\n    const element2 = useFadeIn(2, 2);\r\n\r\n    return (\r\n        <div style={{ padding: \"10px\" }}>\r\n            <h1>💡 useFadeIn</h1>\r\n            <h2>코드</h2>\r\n            <pre>{`import { useRef, useEffect } from 'react';\r\n\r\nexport const useFadeIn = (duration = 2, delay = 0) => {\r\n    const element = useRef();\r\n\r\n    useEffect(() => {\r\n        if (element.current) {\r\n            const { current } = element;\r\n            current.style.transition = ${'`opacity ${duration}s ease-in-out ${delay}`s'};\r\n            current.style.opacity = 1;\r\n        }\r\n    });\r\n\r\n    return { ref: element, style: { opacity: 0 } };\r\n}`}</pre>\r\n            <hr />\r\n            <h2>예시</h2>\r\n            <p {...element1}>\r\n                마술을 보여드릴게요.\r\n            </p>\r\n            <p {...element2}>\r\n                사실, 그런거 할 줄 몰라요.\r\n            </p>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst AppUseNetwork = () => {\r\n    const network = useNetwork(() => {\r\n        if (!network) alert(\"네트워크 연결이 끊겼어요!\")\r\n    });\r\n\r\n    return (\r\n        <div style={{ padding: \"10px\" }}>\r\n            <h1>💡 useNetwork</h1>\r\n            <h2>코드</h2>\r\n            <pre>{`import { useState, useEffect } from 'react';\r\n\r\nexport const useNetwork = onChange => {\r\n    const [status, setStatus] = useState(navigator.onLine);\r\n\r\n    const handleChange = () => {\r\n        if (typeof onChange === \"function\") {\r\n            onChange();\r\n        }\r\n        setStatus(navigator.onLine);\r\n    };\r\n\r\n    useEffect(() => {\r\n        window.addEventListener(\"online\", handleChange);\r\n        window.addEventListener(\"offline\", handleChange);\r\n\r\n        return () => {\r\n            window.removeEventListener(\"online\", handleChange);\r\n            window.removeEventListener(\"offline\", handleChange);\r\n        };\r\n\r\n    });\r\n\r\n    return status;\r\n}`}</pre>\r\n            <hr />\r\n            <h2>예시</h2>\r\n            <p>네트워크 : {network ? \"연결됨\" : \"연결끊김\"}</p>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst AppUseScroll = () => {\r\n    const { y } = useScroll();\r\n\r\n    return (\r\n        <div style={{ height: \"100vh\", padding: \"10px\" }}>\r\n            <h1>💡 useScroll</h1>\r\n            <h2>코드</h2>\r\n            <pre>{`import { useState, useEffect } from 'react';\r\n\r\nexport const useScroll = () => {\r\n    const [state, setState] = useState({ x: 0, y: 0 });\r\n\r\n    const onScroll = () => {\r\n        const x = window.scrollX;\r\n        const y = window.scrollY;\r\n        setState({ x, y });\r\n    };\r\n\r\n    useEffect(() => {\r\n        window.addEventListener(\"scroll\", onScroll);\r\n        return () => window.removeEventListener(\"scroll\", onScroll);\r\n    });\r\n\r\n    return state;\r\n};`}</pre>\r\n            <hr />\r\n            <h2>예시</h2>\r\n            <p>현재 Y축 좌표 : {y}</p>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst AppUseFullscreen = () => {\r\n    const [isFull, setIsFull] = useState(false);\r\n    const callback = (value) => setIsFull(value)\r\n    const { element, onFullscreen, exitFullscreen } = useFullscreen(callback);\r\n\r\n    return (\r\n        <div style={{ padding: \"10px\" }}>\r\n            <h1>💡 useFullscreen</h1>\r\n            <h2>코드</h2>\r\n            <pre>{`import { useRef } from 'react';\r\n            \r\nexport const useFullscreen = (callback) => {\r\n    const element = useRef();\r\n\r\n    const onFullscreen = () => {\r\n        if (element.current) {\r\n            element.current.requestFullscreen();\r\n            if (callback && typeof callback === \"function\") {\r\n                callback(true)\r\n            };\r\n        };\r\n    };\r\n\r\n    const exitFullscreen = () => {\r\n        document.exitFullscreen();\r\n        if (callback && typeof callback === \"function\") {\r\n            callback(false);\r\n        };\r\n    };\r\n\r\n    return { element, onFullscreen, exitFullscreen };\r\n};`}</pre>\r\n            <hr />\r\n            <h2>예시</h2>\r\n            <div ref={element} >\r\n                <div>\r\n                    {\r\n                        isFull\r\n                            ? <button onClick={exitFullscreen}>원래대로</button>\r\n                            : <button onClick={onFullscreen}>전체화면</button>\r\n                    }\r\n                </div>\r\n                <div>\r\n                    <img alt=\"exam\" src=\"https://github.com/choewy/react-custom-hooks/blob/develop/src/images/image.png?raw=true\" />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst AppUseNotification = () => {\r\n    const triggerNotification = useNotification(\"이것은!\", { body: \"알림이라고 알림!\" });\r\n    return (\r\n        <div style={{ padding: \"10px\" }}>\r\n            <h1>💡 useNotification</h1>\r\n            <h2>코드</h2>\r\n            <pre>{`export const useNotification = (title, options) => {\r\n    if (!(\"Notification\" in window)) { return; };\r\n\r\n    const chromeNotification = () => {\r\n        if (Notification.permission !== \"granted\") {\r\n            Notification.requestPermission()\r\n                .then(permission => {\r\n                    if (permission === \"granted\") {\r\n                        new Notification(title, options);\r\n                    } else {\r\n                        return;\r\n                    };\r\n                });\r\n        } else {\r\n            new Notification(title, options);\r\n        };\r\n    };\r\n\r\n    return chromeNotification;\r\n};`}</pre>\r\n            <hr />\r\n            <h2>예시</h2>\r\n            <button onClick={triggerNotification}>통신보안~</button>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst AppUseAxios = () => {\r\n    const { loading, error, data, refetch } = useAxios({ url: \"https://cors-anywhere.herokuapp.com/https://yts.am/api/v2/list_movies.json\" })\r\n    console.log(loading, error, data)\r\n    return (\r\n        <div style={{ padding: \"10px\" }}>\r\n            <h1>💡 useAxios</h1>\r\n            <h2>코드</h2>\r\n            <pre>{`import { useState, useEffect } from 'react';\r\n\r\nexport const useAxios = (options, axiosInstance = defaultAxios) => {\r\n    const [state, setState] = useState({\r\n        loading: true,\r\n        error: null,\r\n        data: null\r\n    });\r\n\r\n    const [trigger, setTrigger] = useState(0);\r\n\r\n    const refetch = () => {\r\n        setState({\r\n            ...state,\r\n            loading: true,\r\n        });\r\n        setTrigger(Date.now());\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (!options.url) {\r\n            return;\r\n        };\r\n\r\n        axiosInstance(options)\r\n            .then(data => {\r\n                console.log(data);\r\n                setState({\r\n                    ...state,\r\n                    loading: false,\r\n                    data\r\n                })\r\n            })\r\n            .catch(error => {\r\n                setState({\r\n                    ...state,\r\n                    loading: false,\r\n                    error\r\n                })\r\n            })\r\n    }, [trigger]);\r\n\r\n    return { ...state, refetch };\r\n}`}</pre>\r\n            <hr />\r\n            <h2>예시</h2>\r\n            <div>\r\n                <h3>{data && data.status}</h3>\r\n                <h4>{loading && \"불러오는 중...\"}</h4>\r\n                <button onClick={refetch}>다시 불러오기</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const links = [\r\n    { text: \"useInput\", path: \"/useInput\" },\r\n    { text: \"useTabs\", path: \"/useTabs\" },\r\n    { text: \"useLoading\", path: \"/useLoading\" },\r\n    { text: \"useClick\", path: \"/useClick\" },\r\n    { text: \"useConfirm\", path: \"/useConfirm\" },\r\n    { text: \"usePreventLeave\", path: \"/usePreventLeave\" },\r\n    { text: \"useBeforeLeave\", path: \"/useBeforeLeave\" },\r\n    { text: \"useFadeIn\", path: \"/useFadeIn\" },\r\n    { text: \"useNetwork\", path: \"/useNetwork\" },\r\n    { text: \"useScroll\", path: \"/useScroll\" },\r\n    { text: \"useFullscreen\", path: \"/useFullscreen\" },\r\n    { text: \"useNotification\", path: \"/useNotification\" },\r\n    { text: \"useAxios\", path: \"/useAxios\" },\r\n];\r\n\r\nexport const Routes = () => {\r\n    return (\r\n        <Switch>\r\n            <Route exact={true} path=\"/useInput\" component={AppUseInput} />\r\n            <Route exact={true} path=\"/useTabs\" component={AppUseTabs} />\r\n            <Route exact={true} path=\"/useLoading\" component={AppUseLoading} />\r\n            <Route exact={true} path=\"/useClick\" component={AppUseClick} />\r\n            <Route exact={true} path=\"/useConfirm\" component={AppUseConfirm} />\r\n            <Route exact={true} path=\"/usePreventLeave\" component={AppUsePreventLeave} />\r\n            <Route exact={true} path=\"/useBeforeLeave\" component={AppUseBeforeLeave} />\r\n            <Route exact={true} path=\"/useFadeIn\" component={AppUseFadeIn} />\r\n            <Route exact={true} path=\"/useNetwork\" component={AppUseNetwork} />\r\n            <Route exact={true} path=\"/useScroll\" component={AppUseScroll} />\r\n            <Route exact={true} path=\"/useFullscreen\" component={AppUseFullscreen} />\r\n            <Route exact={true} path=\"/useNotification\" component={AppUseNotification} />\r\n            <Route exact={true} path=\"/useAxios\" component={AppUseAxios} />\r\n        </Switch>\r\n    )\r\n};","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Routes, links } from './Examples';\r\n\r\nconst App = () => {\r\n    return (\r\n        <div>\r\n            <h1>📌 Hooks</h1>\r\n            <ul>\r\n                {\r\n                    links.map((example, index) => <li key={index}><Link to={example.path}>{example.text}</Link></li>)\r\n                }\r\n            </ul>\r\n            <hr />\r\n            <Routes />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport App from './App';\nimport './index.css'\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root')\n);"],"sourceRoot":""}